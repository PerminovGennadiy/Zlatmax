@use 'sass:math';
// Шрифты ============================================================================================================================
//&display=swap
@import url("https://fonts.googleapis.com/css?family=Montserrat:500,600,700&display=swap");
/* Шрифт по умолчанию */
$font-family: 'Montserrat';
$font-size: rem(16);
$mainColor: #000; // Цвет шрифта по умолчанию
$mainDarkColor: #141414;
/* Подключить если есть файл иконочного шрифта */
@import url("fonts/icons");

// НАСТРОЙКИ==========================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1590;
// Общий отступ у контейнера
// (30 = по 15 пикселей слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Тип адаптива:
// 1 - отзывчивость (у контейнера нет брейкпоинта)
// 2 - по брейк-поинтам (контейнер меняет свою ширинк по брейк-поинам)
$responsiveType: 1;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

//Брейкпоинты
$pc: em($containerWidth); //ПК, ноутбуки, некоторые планшеты
$tablet: em(991.98); // Планшеты, некоторые телефоны
$mobile: em(767.98); // Телефоны l
$mobileSmall: em(479.98); // Телефоны S

// Обнуление и общие параметры =======================================================================================================
@import 'base/null.scss';

body {
    font-weight: 500;
    //Скролл заблокирован
    .lock & {
        overflow: hidden;
        text-align: none;
    }
}
// Оболочка ==========================================================================================================================

.wrapper {
    min-height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    // Сайт загружен
    .loaded & {
        color: #fff;
    }
    // Прижимаем footer
    > main {
        flex: 1 1 auto;
    }
    // Flex для слайдеров
    > * {
        min-width: 0;
    }
}

// Ограничивающий контейнер ==========================================================================================================

/*
(i) Стили будут применяться ко всем классам, содержащим *__container,
например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
    // Отзывчивая
    [class*="_container"] {
        @if ($maxWidthContainer>0) {
            max-width: rem($maxWidthContainer);
            box-sizing: content-box;
            margin: 0 auto;
        }
        @if ($containerPadding>0) {
            padding: 0 rem(math.div($containerPadding, 2));
        }
    }
}   @else {
    // По брейк-поинтам
    [class*="_container"] {
        margin: 0 auto;
        @if ($maxWidthContainer>0) {
            max-width: rem($maxWidthContainer);
            box-sizing: content-box;
        } @else {
            @if ($containerPadding>0) {
                padding: o rem(math.div($containerPadding, 2));
            }
        }
        @media (max-width: $pc) {
            max-width: rem(970);
        }
        @media (max-width: $tablet) {
            max-width: rem(750);
        }
        @media (max-width: $mobile) {
            max-width: none;
            @if ($containerPadding>0 and $maxWidthContainer>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
    }
}

// mixin'ы ===========================================================================================================================

// @include adaptiveValue('gap',60 ,10); --- и значение gap(в данном случае) будет меняться от 60, с расширением экрана более 767, до 10, если расширение экрана всё меньше
@mixin adaptiveValue($property,$pcSize,$mobSize) {
    $addSize: $pcSize - $mobSize;
    $addMobSize: $addSize + $addSize * 0.7;
    @media (max-width: 767px) {
        #{$property}: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
    }
    @media (min-width: 767px) {
        #{$property}: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
    }
}

// @include responsive-ratio(16,9); --- блок будет иметь соотношение, которое обычно используется в видео
@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}


/* показывает увеличение внутренних отступов и размера шрифта, когда вьюпорт становится больше 1024px.
.site-header {
    padding: 2rem;
    font-size: 1.8rem;
    @include mq('tablet-wide') {
        padding-top: 4rem;
        font-size: 2.4rem;
    }
} 
*/
$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
    );
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}
// Подключение стилей=================================================================================================================

// Для подключения/отключения конкретных стилей
@import 'base';

// Подключение стилей общих элементов проекта
@import 'common';

// Подключение стилей отдельных блоков
@import 'header';
@import 'footer';

// Подключение стилей отдельных страниц
@import 'home';

// Burger ============================================================================================================================

.icon-menu {
    display: none;
    @media (max-width: $mobile) {
        display: block;
        position: relative;
        flex: 0 0 30px;
        height: 18px;
        cursor: pointer;
        z-index: 5;
        span,
        &::before,
        &::after {
            content: "";
            transition: all 0.3s ease 0s;
            left: 0px;
            position: absolute;
            width: 100%;
            height: 2px;
            background-color: #fff;
        }
        &::before {
            top:0;
        }
        &::after {
            bottom: 0;
        }
        span {
            top: calc(50% - 1px);
        }
        .menu-open & {
            span {
                transform: scale(0);
            }
            &::before {
                transform: rotate(-45deg);
                top: calc(50% - 1px);
            }
            &::after {
                transform: rotate(45deg);
                bottom: calc(50% - 1px);
            }
        }
    }
}

@media (max-width: 767px){
    .icon-menu {
        display: block;
        position: relative;
        width: 40px;
        height: 30px;
        left: 40px;
        background-color: $mainDarkColor;
    }
    .icon-menu span{
        position: absolute;
        background-color: #fff;
        left: 0;
        width: 100%;
        height: 4px;
        top: 11px;
    }
    .icon-menu:before,
    .icon-menu:after{
        content: '';
        background-color: #fff;
        position: absolute;
        width: 100%;
        height: 4px;
        left: 0;
    }
    .icon-menu:before {
        top: 0;
    }
    .icon-menu:after{
        bottom: 0;
    }
}
// Burger end=========================================================================================================================


// Стили =============================================================================================================================
.header {
    &__top {
        background-color: $mainDarkColor;
    }
}

.menu__item {
    list-style-type: none;
}


.menu__link, ._icon-Personal_area{
    text-decoration: none;
    color: #fff;
}

.top-header {
    padding: 10px 0;
    &__container {
        display: flex;
        align-items: center;
        gap: 20px;
        min-height: 50px;
        @include adaptiveValue('margin-left',171,5);
        @include adaptiveValue('margin-right',167.63,5);
    }

    &__menu {
        flex: 1 1 auto;
    }

    &__user {
        display: inline-flex;
        align-items: center;
        font-weight: 600;
        line-height: math.div(22,18);
        &::before {
            font-size: 28px;
            @include adaptiveValue('margin-right',15,5);
        }
    }
}

.menu {

    &__link {
        font-size:rem(16) ;
        font-family: 'Montserrat';
        line-height: math.div(20, 16);
    }

    &__list {
        display: flex;
        flex-wrap: wrap;
        row-gap: 5px;
        @include adaptiveValue('column-gap',60 ,10)
    }
}

@media (max-width: 767px){
    ._icon-Personal_area {
        left: 500px;
    }
}